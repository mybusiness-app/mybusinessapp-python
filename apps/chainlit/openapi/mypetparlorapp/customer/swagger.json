{
    "components": {
        "schemas": {
            "customer.CreateCustomer": {
                "properties": {
                    "defaultAuthorizationId": {
                        "example": "62f298042b32093cf600963f",
                        "type": "string"
                    },
                    "defaultEftReference": {
                        "example": "CUS-5543f324",
                        "type": "string"
                    },
                    "email": {
                        "example": "info@mppdemo.co.za",
                        "type": "string"
                    },
                    "firstName": {
                        "example": "MyPetParlor",
                        "minLength": 1,
                        "type": "string"
                    },
                    "gravatarUrl": {
                        "example": "https://gravatar.com/avatar/fe1dad0128df2f64a8e50ba221fff1d1?d=retro",
                        "type": "string"
                    },
                    "id": {
                        "example": "568c28fffc4be30d44d0398e",
                        "type": "string"
                    },
                    "isDifficult": {
                        "example": false,
                        "type": "boolean"
                    },
                    "isLatePayer": {
                        "example": false,
                        "type": "boolean"
                    },
                    "isXeroDataStale": {
                        "example": false,
                        "type": "boolean"
                    },
                    "lastName": {
                        "example": "Demo",
                        "minLength": 1,
                        "type": "string"
                    },
                    "password": {
                        "example": "password12345678",
                        "type": "string"
                    },
                    "phoneNumber": {
                        "example": "+27654324343",
                        "type": "string"
                    },
                    "photoUrl": {
                        "example": "https://shared-mybusinessapp.azureedge.net/images/mSI8TgB90dU0wd42WkwZdEQy9vL2-dd43f0be-9dcc-4326-87f1-beea52aed3d1.jpg",
                        "type": "string"
                    },
                    "teamsAssociatedWith": {
                        "example": [
                            "[]"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": false
                    },
                    "uid": {
                        "example": "gSI5TgB90dU0wd42WkwZdEQy9vL2",
                        "type": "string"
                    },
                    "useGravatar": {
                        "example": false,
                        "type": "boolean"
                    },
                    "xeroContactId": {
                        "example": "d12eb97b-d207-4vcb-9ab6-8b466a8b4d39",
                        "minLength": 1,
                        "type": "string"
                    },
                    "xeroContactName": {
                        "example": "Jay Day",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "customer.Customer": {
                "properties": {
                    "addressCount": {
                        "example": 4,
                        "type": "integer"
                    },
                    "authorizationCount": {
                        "example": 4,
                        "type": "integer"
                    },
                    "bookingCount": {
                        "example": 4,
                        "type": "integer"
                    },
                    "createdAt": {
                        "example": "2023-01-05T00:00:00.000Z",
                        "type": "string"
                    },
                    "customFieldValues": {
                        "items": {
                            "$ref": "#/components/schemas/entities.CustomFieldValue"
                        },
                        "type": "array",
                        "uniqueItems": false
                    },
                    "defaultAuthorization": {
                        "$ref": "#/components/schemas/customer.CustomerAuthorization"
                    },
                    "defaultAuthorizationId": {
                        "type": "string"
                    },
                    "defaultEftReference": {
                        "example": "CUS-5543f324",
                        "type": "string"
                    },
                    "email": {
                        "example": "jydy@gmail.com",
                        "type": "string"
                    },
                    "firstName": {
                        "example": "Jay",
                        "type": "string"
                    },
                    "gravatarUrl": {
                        "example": "https://gravatar.com/avatar/d0e9201191872ec2ea8c5916df838e7d?d=retro",
                        "type": "string"
                    },
                    "id": {
                        "example": "568c28fffc4be30d44d0398e",
                        "type": "string"
                    },
                    "isDifficult": {
                        "example": false,
                        "type": "boolean"
                    },
                    "isLatePayer": {
                        "example": false,
                        "type": "boolean"
                    },
                    "isXeroDataStale": {
                        "example": false,
                        "type": "boolean"
                    },
                    "lastName": {
                        "example": "Day",
                        "type": "string"
                    },
                    "petCount": {
                        "example": 4,
                        "type": "integer"
                    },
                    "phoneNumber": {
                        "example": "+27654324343",
                        "type": "string"
                    },
                    "photoUrl": {
                        "example": "https://shared-mybusinessapp.azureedge.net/images/mSI8TgB90dU0wd42WkwZdEQy9vL2-dd43f0be-9dcc-4326-87f1-beea52aed3d1.jpg",
                        "type": "string"
                    },
                    "teamCustomerData": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/customer.TeamCustomerData"
                        },
                        "type": "object"
                    },
                    "teamsAssociatedWith": {
                        "example": [
                            "[]"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": false
                    },
                    "uid": {
                        "example": "gSI5TgB90dU0wd42WkwZdEQy9vL2",
                        "type": "string"
                    },
                    "updatedAt": {
                        "example": "2023-01-05T00:00:00.000Z",
                        "type": "string"
                    },
                    "useGravatar": {
                        "example": false,
                        "type": "boolean"
                    },
                    "xeroContactId": {
                        "example": "d12eb97b-d207-4vcb-9ab6-8b466a8b4d39",
                        "type": "string"
                    },
                    "xeroContactName": {
                        "example": "Jay Day",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "customer.CustomerAuthorization": {
                "properties": {
                    "accountName": {
                        "example": "Bank Card",
                        "type": "string"
                    },
                    "authorizationCode": {
                        "example": "AUTH_s5nditseka",
                        "type": "string"
                    },
                    "bank": {
                        "example": "TEST BANK",
                        "type": "string"
                    },
                    "bin": {
                        "example": "408408",
                        "type": "string"
                    },
                    "brand": {
                        "example": "visa",
                        "type": "string"
                    },
                    "cardType": {
                        "example": "visa",
                        "type": "string"
                    },
                    "channel": {
                        "example": "card",
                        "type": "string"
                    },
                    "countryCode": {
                        "example": "NG",
                        "type": "string"
                    },
                    "createdAt": {
                        "example": "2023-01-05T00:00:00.000Z",
                        "type": "string"
                    },
                    "customerId": {
                        "example": "568c28fffc4be30d44d0398e",
                        "type": "string"
                    },
                    "expiryMonth": {
                        "example": "09",
                        "type": "string"
                    },
                    "expiryYear": {
                        "example": "2025",
                        "type": "string"
                    },
                    "id": {
                        "example": "568c28fffc4be30d44d0398e",
                        "type": "string"
                    },
                    "last4": {
                        "example": "4081",
                        "type": "string"
                    },
                    "reusable": {
                        "example": true,
                        "type": "boolean"
                    },
                    "signature": {
                        "example": "SIG_qdUrNo5EyBmVbMIq6J0v",
                        "type": "string"
                    },
                    "updatedAt": {
                        "example": "2023-01-05T00:00:00.000Z",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "customer.TeamCustomerData": {
                "properties": {
                    "authorizationCount": {
                        "example": 4,
                        "type": "integer"
                    },
                    "bookingCount": {
                        "example": 4,
                        "type": "integer"
                    },
                    "defaultAuthorization": {
                        "$ref": "#/components/schemas/customer.CustomerAuthorization"
                    },
                    "defaultAuthorizationId": {
                        "type": "string"
                    },
                    "isDifficult": {
                        "example": false,
                        "type": "boolean"
                    },
                    "isLatePayer": {
                        "example": false,
                        "type": "boolean"
                    },
                    "isXeroDataStale": {
                        "example": false,
                        "type": "boolean"
                    },
                    "xeroContactId": {
                        "example": "d12eb97b-d207-4vcb-9ab6-8b466a8b4d39",
                        "type": "string"
                    },
                    "xeroContactName": {
                        "example": "Jay Day",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "customer.UpdateCustomer": {
                "properties": {
                    "defaultAuthorizationId": {
                        "example": "62f298042b32093cf600963f",
                        "type": "string"
                    },
                    "defaultEftReference": {
                        "example": "CUS-5543f324",
                        "type": "string"
                    },
                    "email": {
                        "example": "info@mppdemo.co.za",
                        "type": "string"
                    },
                    "firstName": {
                        "example": "MyPetParlor",
                        "minLength": 1,
                        "type": "string"
                    },
                    "isDifficult": {
                        "example": false,
                        "type": "boolean"
                    },
                    "isLatePayer": {
                        "example": false,
                        "type": "boolean"
                    },
                    "isXeroDataStale": {
                        "example": false,
                        "type": "boolean"
                    },
                    "lastName": {
                        "example": "Demo",
                        "minLength": 1,
                        "type": "string"
                    },
                    "phoneNumber": {
                        "example": "+27654324343",
                        "type": "string"
                    },
                    "photoUrl": {
                        "example": "https://url-to-photo.com",
                        "type": "string"
                    },
                    "teamCustomerData": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/customer.UpdateTeamCustomerData"
                        },
                        "type": "object"
                    },
                    "uid": {
                        "example": "gSI5TgB90dU0wd42WkwZdEQy9vL2",
                        "type": "string"
                    },
                    "useGravatar": {
                        "example": false,
                        "type": "boolean"
                    },
                    "xeroContactId": {
                        "example": "d12eb97b-d207-4vcb-9ab6-8b466a8b4d39",
                        "minLength": 1,
                        "type": "string"
                    },
                    "xeroContactName": {
                        "example": "Jay Day",
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "customer.UpdateTeamCustomerData": {
                "properties": {
                    "authorizationCount": {
                        "example": 4,
                        "type": "integer"
                    },
                    "bookingCount": {
                        "example": 4,
                        "type": "integer"
                    },
                    "defaultAuthorizationId": {
                        "type": "string"
                    },
                    "isDifficult": {
                        "example": false,
                        "type": "boolean"
                    },
                    "isLatePayer": {
                        "example": false,
                        "type": "boolean"
                    },
                    "isXeroDataStale": {
                        "example": false,
                        "type": "boolean"
                    },
                    "xeroContactId": {
                        "example": "d12eb97b-d207-4vcb-9ab6-8b466a8b4d39",
                        "type": "string"
                    },
                    "xeroContactName": {
                        "example": "Jay Day",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "data": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/customer.Customer"
                    }
                },
                "type": "object"
            },
            "entities.CustomFieldValue": {
                "properties": {
                    "createdAt": {
                        "example": "2023-01-05T00:00:00.000Z",
                        "type": "string"
                    },
                    "customFieldId": {
                        "example": "568c28fffc4be30d44d0398e",
                        "type": "string"
                    },
                    "id": {
                        "example": "568c28fffc4be30d44d0398e",
                        "type": "string"
                    },
                    "referenceId": {
                        "example": "568c28fffc4be30d44d0398e",
                        "type": "string"
                    },
                    "referenceType": {
                        "example": "customer",
                        "type": "string"
                    },
                    "updatedAt": {
                        "example": "2023-01-05T00:00:00.000Z",
                        "type": "string"
                    },
                    "valueDate": {
                        "example": "2023-01-05T00:00:00.000Z",
                        "type": "string"
                    },
                    "valueDateTime": {
                        "example": "2023-01-05T00:00:00.000Z",
                        "type": "string"
                    },
                    "valueJson": {
                        "type": "object"
                    },
                    "valueNumber": {
                        "example": 123.45,
                        "type": "number"
                    },
                    "valueText": {
                        "example": "Some Text",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "entities.JSONResultFailure": {
                "properties": {
                    "errors": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "uniqueItems": false
                    },
                    "message": {
                        "example": "Operation failed",
                        "type": "string"
                    },
                    "success": {
                        "example": false,
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "entities.JSONResultSuccess": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/data"
                    }
                ],
                "properties": {
                    "data": {},
                    "message": {
                        "example": "Operation completed successfully",
                        "type": "string"
                    },
                    "metadata": {},
                    "success": {
                        "example": true,
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        }
    },
    "info": {
        "contact": {
            "email": "support@mybusinessapp.co.za",
            "name": "API Support",
            "url": "https://mybusinessapp.co.za/support"
        },
        "description": "Deletes relationship between customer and team. Removes team-based access while preserving customer data. Updates customer's team associations list.",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "termsOfService": "https://mybusinessapp.co.za/terms",
        "title": "Customer Management API",
        "version": "1.0"
    },
    "externalDocs": {
        "description": "",
        "url": ""
    },
    "paths": {
        "/customers": {
            "get": {
                "description": "Retrieves a paginated list of customers with optional team-based filtering. Supports customizable page size and team-specific views. Returns customer profiles with their associated metadata and team relationships. Allows filtering by date range based on when customers were created using from date and to date parameters.",
                "operationId": "get_all_customers",
                "parameters": [
                    {
                        "description": "Azure API Management subscription key for authentication",
                        "in": "header",
                        "name": "Ocp-Apim-Subscription-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Deployment region identifier (e.g. za0, za1, uk1, us1)",
                        "in": "header",
                        "name": "X-MBA-Deployment-Location",
                        "required": true,
                        "schema": {
                            "enum": [
                                "za0",
                                "za1",
                                "uk1",
                                "us1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tenant identifier for multi-tenant isolation",
                        "in": "header",
                        "name": "X-MBA-Application-ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Application type for response formatting",
                        "in": "header",
                        "name": "X-MBA-Application-Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "mypetparlorapp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Firebase authentication token",
                        "in": "query",
                        "name": "firebaseIdToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Page number for pagination",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of customers per page",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "maximum": 200,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Enable or disable pagination",
                        "in": "query",
                        "name": "paginate",
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filter customers by specific team ID",
                        "in": "query",
                        "name": "teamId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter customers by multiple team IDs (comma-separated)",
                        "in": "query",
                        "name": "teamIds",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Start date for filtering customers by creation date",
                        "in": "query",
                        "name": "fromDate",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date for filtering customers by creation date",
                        "in": "query",
                        "name": "toDate",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/data"
                                        }
                                    ],
                                    "properties": {
                                        "data": {},
                                        "message": {
                                            "example": "Operation completed successfully",
                                            "type": "string"
                                        },
                                        "metadata": {},
                                        "success": {
                                            "example": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successfully retrieved customer list"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Authentication failed or token invalid"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Invalid parameters provided"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Server error processing request"
                    }
                },
                "summary": "List all customers with pagination and filtering",
                "tags": [
                    "Customer"
                ]
            },
            "post": {
                "description": "Creates a new customer record with comprehensive profile data. Supports optional features like welcome email and Xero integration. Automatically handles gravatar integration and default field initialization.",
                "operationId": "create_single_customer",
                "parameters": [
                    {
                        "description": "Azure API Management subscription key for authentication",
                        "in": "header",
                        "name": "Ocp-Apim-Subscription-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Deployment region identifier (e.g. za0, za1, uk1, us1)",
                        "in": "header",
                        "name": "X-MBA-Deployment-Location",
                        "required": true,
                        "schema": {
                            "enum": [
                                "za0",
                                "za1",
                                "uk1",
                                "us1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tenant identifier for multi-tenant isolation",
                        "in": "header",
                        "name": "X-MBA-Application-ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Application type for response formatting",
                        "in": "header",
                        "name": "X-MBA-Application-Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "mypetparlorapp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Firebase authentication token",
                        "in": "query",
                        "name": "firebaseIdToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Send welcome email to customer",
                        "in": "query",
                        "name": "sendInvite",
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Associate customer with team",
                        "in": "query",
                        "name": "teamId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Xero tenant ID for contact creation",
                        "in": "query",
                        "name": "xeroTenantId",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customer.CreateCustomer"
                            }
                        }
                    },
                    "description": "Customer profile data",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/data"
                                        }
                                    ],
                                    "properties": {
                                        "data": {},
                                        "message": {
                                            "example": "Operation completed successfully",
                                            "type": "string"
                                        },
                                        "metadata": {},
                                        "success": {
                                            "example": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Customer successfully created"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Authentication failed or token invalid"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Customer already exists"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Invalid customer data provided"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Server error processing request"
                    }
                },
                "summary": "Create new customer profile",
                "tags": [
                    "Customer"
                ]
            }
        },
        "/customers/search": {
            "get": {
                "description": "Performs semantic text search across customer records with pagination and team filtering. Matches against names, emails, phone numbers, user ID, customer EFT reference and other relevant fields. Supports advanced filtering and sorting options, including filtering by when customers were created using a date range. This endpoint is similar to the get_all_customers endpoint, but it only returns a list of customers that match the search query.",
                "operationId": "search_all_customers",
                "parameters": [
                    {
                        "description": "Azure API Management subscription key for authentication",
                        "in": "header",
                        "name": "Ocp-Apim-Subscription-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Deployment region identifier (e.g. za0, za1, uk1, us1)",
                        "in": "header",
                        "name": "X-MBA-Deployment-Location",
                        "required": true,
                        "schema": {
                            "enum": [
                                "za0",
                                "za1",
                                "uk1",
                                "us1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tenant identifier for multi-tenant isolation",
                        "in": "header",
                        "name": "X-MBA-Application-ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Application type for response formatting",
                        "in": "header",
                        "name": "X-MBA-Application-Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "mypetparlorapp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Firebase authentication token",
                        "in": "query",
                        "name": "firebaseIdToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Page number for pagination",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of customers per page",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "maximum": 200,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Enable or disable pagination",
                        "in": "query",
                        "name": "paginate",
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Text search query for customer matching",
                        "in": "query",
                        "name": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter customers by specific team ID",
                        "in": "query",
                        "name": "teamId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter customers by multiple team IDs (comma-separated)",
                        "in": "query",
                        "name": "teamIds",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Start date for filtering customers by creation date",
                        "in": "query",
                        "name": "fromDate",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date for filtering customers by creation date",
                        "in": "query",
                        "name": "toDate",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/data"
                                        }
                                    ],
                                    "properties": {
                                        "data": {},
                                        "message": {
                                            "example": "Operation completed successfully",
                                            "type": "string"
                                        },
                                        "metadata": {},
                                        "success": {
                                            "example": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successfully retrieved matching customers"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Authentication failed or token invalid"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Server error processing request"
                    }
                },
                "summary": "Search customers with text matching, pagination and filtering",
                "tags": [
                    "Customer"
                ]
            }
        },
        "/customers/uid/{uid}": {
            "get": {
                "description": "Fetches customer profile using their unique identifier (UID). Alternative lookup method that uses UID instead of internal ID. Returns complete customer data including associations.",
                "operationId": "get_single_customer_by_uid",
                "parameters": [
                    {
                        "description": "Azure API Management subscription key for authentication",
                        "in": "header",
                        "name": "Ocp-Apim-Subscription-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Deployment region identifier (e.g. za0, za1, uk1, us1)",
                        "in": "header",
                        "name": "X-MBA-Deployment-Location",
                        "required": true,
                        "schema": {
                            "enum": [
                                "za0",
                                "za1",
                                "uk1",
                                "us1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tenant identifier for multi-tenant isolation",
                        "in": "header",
                        "name": "X-MBA-Application-ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Application type for response formatting",
                        "in": "header",
                        "name": "X-MBA-Application-Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "mypetparlorapp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Firebase authentication token",
                        "in": "query",
                        "name": "firebaseIdToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Customer's unique identifier (UID)",
                        "in": "path",
                        "name": "uid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/data"
                                        }
                                    ],
                                    "properties": {
                                        "data": {},
                                        "message": {
                                            "example": "Operation completed successfully",
                                            "type": "string"
                                        },
                                        "metadata": {},
                                        "success": {
                                            "example": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Customer details successfully retrieved"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Authentication failed or token invalid"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Customer not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Invalid UID format"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Server error processing request"
                    }
                },
                "summary": "Retrieve customer by UID",
                "tags": [
                    "Customer"
                ]
            }
        },
        "/customers/{id}": {
            "delete": {
                "description": "Permanently deletes customer record and associated data. Handles cleanup of related resources and external system integrations. Cannot be undone.",
                "operationId": "delete_single_customer",
                "parameters": [
                    {
                        "description": "Azure API Management subscription key for authentication",
                        "in": "header",
                        "name": "Ocp-Apim-Subscription-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Deployment region identifier (e.g. za0, za1, uk1, us1)",
                        "in": "header",
                        "name": "X-MBA-Deployment-Location",
                        "required": true,
                        "schema": {
                            "enum": [
                                "za0",
                                "za1",
                                "uk1",
                                "us1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tenant identifier for multi-tenant isolation",
                        "in": "header",
                        "name": "X-MBA-Application-ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Application type for response formatting",
                        "in": "header",
                        "name": "X-MBA-Application-Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "mypetparlorapp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Firebase authentication token",
                        "in": "query",
                        "name": "firebaseIdToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Customer's unique identifier",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultSuccess"
                                }
                            }
                        },
                        "description": "Customer successfully deleted"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Authentication failed or token invalid"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Customer not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Invalid customer ID format"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Server error processing request"
                    }
                },
                "summary": "Remove customer profile",
                "tags": [
                    "Customer"
                ]
            },
            "get": {
                "description": "Fetches detailed customer information using their unique identifier. Returns complete profile including team associations, Xero integration status, and custom field values. This endpoint is similar to the get_all_customers endpoint, but it only returns a single customer.",
                "operationId": "get_single_customer",
                "parameters": [
                    {
                        "description": "Azure API Management subscription key for authentication",
                        "in": "header",
                        "name": "Ocp-Apim-Subscription-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Deployment region identifier (e.g. za0, za1, uk1, us1)",
                        "in": "header",
                        "name": "X-MBA-Deployment-Location",
                        "required": true,
                        "schema": {
                            "enum": [
                                "za0",
                                "za1",
                                "uk1",
                                "us1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tenant identifier for multi-tenant isolation",
                        "in": "header",
                        "name": "X-MBA-Application-ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Application type for response formatting",
                        "in": "header",
                        "name": "X-MBA-Application-Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "mypetparlorapp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Firebase authentication token",
                        "in": "query",
                        "name": "firebaseIdToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Customer's unique identifier",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/data"
                                        }
                                    ],
                                    "properties": {
                                        "data": {},
                                        "message": {
                                            "example": "Operation completed successfully",
                                            "type": "string"
                                        },
                                        "metadata": {},
                                        "success": {
                                            "example": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Customer details successfully retrieved"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Authentication failed or token invalid"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Customer not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Invalid customer ID format"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Server error processing request"
                    }
                },
                "summary": "Retrieve customer by ID",
                "tags": [
                    "Customer"
                ]
            },
            "patch": {
                "description": "Updates customer information with partial or complete profile changes. Supports field-level updates and maintains data consistency. Automatically handles timestamp updates and validation.",
                "operationId": "update_single_customer",
                "parameters": [
                    {
                        "description": "Azure API Management subscription key for authentication",
                        "in": "header",
                        "name": "Ocp-Apim-Subscription-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Deployment region identifier (e.g. za0, za1, uk1, us1)",
                        "in": "header",
                        "name": "X-MBA-Deployment-Location",
                        "required": true,
                        "schema": {
                            "enum": [
                                "za0",
                                "za1",
                                "uk1",
                                "us1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tenant identifier for multi-tenant isolation",
                        "in": "header",
                        "name": "X-MBA-Application-ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Application type for response formatting",
                        "in": "header",
                        "name": "X-MBA-Application-Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "mypetparlorapp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Firebase authentication token",
                        "in": "query",
                        "name": "firebaseIdToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Customer's unique identifier",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customer.UpdateCustomer"
                            }
                        }
                    },
                    "description": "Updated customer data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/data"
                                        }
                                    ],
                                    "properties": {
                                        "data": {},
                                        "message": {
                                            "example": "Operation completed successfully",
                                            "type": "string"
                                        },
                                        "metadata": {},
                                        "success": {
                                            "example": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Customer successfully updated"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Authentication failed or token invalid"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Customer not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Invalid update data"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Server error processing request"
                    }
                },
                "summary": "Modify customer profile",
                "tags": [
                    "Customer"
                ]
            }
        },
        "/customers/{id}/associations/teams/{teamId}": {
            "delete": {
                "description": "Deletes relationship between customer and team. Removes team-based access while preserving customer data. Updates customer's team associations list.",
                "operationId": "remove_from_teams_associated_with",
                "parameters": [
                    {
                        "description": "Azure API Management subscription key for authentication",
                        "in": "header",
                        "name": "Ocp-Apim-Subscription-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Deployment region identifier (e.g. za0, za1, uk1, us1)",
                        "in": "header",
                        "name": "X-MBA-Deployment-Location",
                        "required": true,
                        "schema": {
                            "enum": [
                                "za0",
                                "za1",
                                "uk1",
                                "us1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tenant identifier for multi-tenant isolation",
                        "in": "header",
                        "name": "X-MBA-Application-ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Application type for response formatting",
                        "in": "header",
                        "name": "X-MBA-Application-Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "mypetparlorapp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Firebase authentication token",
                        "in": "query",
                        "name": "firebaseIdToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Customer's unique identifier",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Team's unique identifier",
                        "in": "path",
                        "name": "teamId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/data"
                                        }
                                    ],
                                    "properties": {
                                        "data": {},
                                        "message": {
                                            "example": "Operation completed successfully",
                                            "type": "string"
                                        },
                                        "metadata": {},
                                        "success": {
                                            "example": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Team association successfully removed"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Authentication failed or token invalid"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Customer or team not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Invalid customer or team ID format"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Server error processing request"
                    }
                },
                "summary": "Remove team association",
                "tags": [
                    "Customer"
                ]
            },
            "post": {
                "description": "Creates a relationship between customer and team. Enables team-based access control and management features. Updates customer's team associations list.",
                "operationId": "add_to_teams_associated_with",
                "parameters": [
                    {
                        "description": "Azure API Management subscription key for authentication",
                        "in": "header",
                        "name": "Ocp-Apim-Subscription-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Deployment region identifier (e.g. za0, za1, uk1, us1)",
                        "in": "header",
                        "name": "X-MBA-Deployment-Location",
                        "required": true,
                        "schema": {
                            "enum": [
                                "za0",
                                "za1",
                                "uk1",
                                "us1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tenant identifier for multi-tenant isolation",
                        "in": "header",
                        "name": "X-MBA-Application-ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Application type for response formatting",
                        "in": "header",
                        "name": "X-MBA-Application-Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "mypetparlorapp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Firebase authentication token",
                        "in": "query",
                        "name": "firebaseIdToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Customer's unique identifier",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Team's unique identifier",
                        "in": "path",
                        "name": "teamId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/data"
                                        }
                                    ],
                                    "properties": {
                                        "data": {},
                                        "message": {
                                            "example": "Operation completed successfully",
                                            "type": "string"
                                        },
                                        "metadata": {},
                                        "success": {
                                            "example": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Team association successfully added"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Authentication failed or token invalid"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Customer or team not found"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Invalid customer or team ID format"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Server error processing request"
                    }
                },
                "summary": "Add team association",
                "tags": [
                    "Customer"
                ]
            }
        },
        "/customers/{id}/unlink-xero-contact": {
            "patch": {
                "description": "Disconnects customer profile from associated Xero contact. Maintains customer data while removing external system integration. Updates relevant timestamps and flags.",
                "operationId": "unlink_customer_xero_contact",
                "parameters": [
                    {
                        "description": "Azure API Management subscription key for authentication",
                        "in": "header",
                        "name": "Ocp-Apim-Subscription-Key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Deployment region identifier (e.g. za0, za1, uk1, us1)",
                        "in": "header",
                        "name": "X-MBA-Deployment-Location",
                        "required": true,
                        "schema": {
                            "enum": [
                                "za0",
                                "za1",
                                "uk1",
                                "us1"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Tenant identifier for multi-tenant isolation",
                        "in": "header",
                        "name": "X-MBA-Application-ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Application type for response formatting",
                        "in": "header",
                        "name": "X-MBA-Application-Type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "mypetparlorapp"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Firebase authentication token",
                        "in": "query",
                        "name": "firebaseIdToken",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Customer's unique identifier",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/data"
                                        }
                                    ],
                                    "properties": {
                                        "data": {},
                                        "message": {
                                            "example": "Operation completed successfully",
                                            "type": "string"
                                        },
                                        "metadata": {},
                                        "success": {
                                            "example": true,
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Xero contact successfully unlinked"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Authentication failed or token invalid"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Customer not found"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/entities.JSONResultFailure"
                                }
                            }
                        },
                        "description": "Server error processing request"
                    }
                },
                "summary": "Remove Xero contact link",
                "tags": [
                    "Customer"
                ]
            }
        }
    },
    "openapi": "3.1.0",
    "servers": [
        {
            "url": "https://mpp-api-mybusinessapp-san.azure-api.net/v2/"
        }
    ]
}